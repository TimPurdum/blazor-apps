<div class="scrum-table">
	<ScrumHand UserName="@UserName" OnCardClickedCallback="CardClicked" />

	@{
		var offset = 0;
		if (_selectedValues.Any())
		{
			var sortedValues = _selectedValues.OrderBy(kvp => kvp.Value).ToArray();
		
			<div class="results">
			@for (var i = 0; i < sortedValues.Length; i++)
			{
					var kvp = sortedValues[i];
					Color? backgroundColor = null;
					if (_showCards.Value)
					{
						if (kvp.Value == _median)
						{
							backgroundColor = Color.LightBlue;
						}
						else if (kvp.Value == _mode)
						{
							backgroundColor = Color.LightGreen;
						}
					}
					<div class="labelled-card" style="top: @(offset)px;">
					<ScrumCard Background="@backgroundColor" Value="@kvp.Value" ContentVisible="@_showCards.Value" />
					<label class="card-label">@kvp.Key</label>
				</div>
				offset += 10;
			}
			</div>
			<div class="card-toggle">
				<button class="btn btn-primary" 
				@onclick="ToggleCards">@(_showCards.Value ? "Hide Results" : "Show Results")</button>
				@if (_showCards.Value)
				{
					<label>Mean: @_mean</label>
					<label style="@($"background-color: {BlazorApps.Shared.ColorConverter.GetCssColor(Color.LightBlue)};")">Median: @_median</label>
					<label style="@($"background-color: {BlazorApps.Shared.ColorConverter.GetCssColor(Color.LightGreen)};")">Mode: @_mode</label>
				}
				<button class="btn btn-danger" @onclick="ClearSelections">Clear</button>
			</div>
		}
	}
</div>
