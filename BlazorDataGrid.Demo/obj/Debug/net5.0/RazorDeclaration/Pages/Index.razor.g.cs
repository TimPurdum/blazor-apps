// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorDataGrid.Demo.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using BlazorDataGrid.Demo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using BlazorDataGrid.Demo.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using BlazorDataGrid.Business;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\_Imports.razor"
using BlazorDataGrid.Business.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\Pages\Index.razor"
using System.Drawing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\Pages\Index.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\Pages\Index.razor"
using BlazorDataGrid.Business.Utilities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\Pages\Index.razor"
using System.Collections.ObjectModel;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 43 "C:\git\BlazorDataGrid\BlazorDataGrid.Demo\Pages\Index.razor"
       
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _jsonValue = JsonSerializer.Serialize(_people);
    }

    private void JsonChanged(ChangeEventArgs e)
    {
        _jsonValue = e.Value?.ToString();
        if (_jsonValue == null) return;
        try
        {
            var newPeople = JsonSerializer.Deserialize<ObservableCollection<Person>>(_jsonValue);
            if (newPeople == null) return;
            _people.Clear();
            foreach (var person in newPeople)
            {
                _people.Add(person);
            }
        }
        catch
        {
            _message = "Invalid JSON";
        }
    }

    private void AddPerson()
    {
        _people.Add(new Person
        {
            FirstName = "Noob",
            LastName = "Guy",
            Age = 0,
            DateOfBirth = DateTime.Now
        });
    }
    
    private readonly IList<BdColumnDefinition> _columnDefinitions = new List<BdColumnDefinition>
    {
        new()
        {
            BindingField = "FirstName",
            Header = "First Name",
            Width = 200,
            WidthUnit = ColumnMeasurementUnit.Pixel,
            IsEditable = true
        },
        new()
        {
            BindingField = "LastName",
            Header = "Family Name",
            BackgroundColor = Color.Chartreuse,
            Width = 200,
            WidthUnit = ColumnMeasurementUnit.Pixel,
            IsEditable = true
        },
        new()
        {
            BindingField = "DateOfBirth",
            Header = "DOB",
            Width = 200,
            WidthUnit = ColumnMeasurementUnit.Pixel,
            FieldType = FieldType.Date,
            IsEditable = true
        },
        new ()
        {
            BindingField = "Age",
            Header = "Age",
            Width = 60,
            FieldType = FieldType.IntNumeric,
            WidthUnit = ColumnMeasurementUnit.Pixel,
            IsEditable = true
        },
        new()
        {
            BindingField = nameof(Person.IsEmployed),
            Header = "Employed",
            Width = 100,
            WidthUnit = ColumnMeasurementUnit.Pixel,
            FieldType = FieldType.Checkbox,
            IsEditable = true
        }
    };

    private IList<Person> People
    {
        get => _people;
        set
        {
            _people = value;
            _jsonValue = JsonSerializer.Serialize(_people);
        }
    }
    
    private IList<Person> _people = new ObservableCollection<Person>
    {
        new()
        {
            FirstName = "Joe",
            LastName = "Smith",
            Age = 43,
            DateOfBirth = new DateTime(1977, 7, 15),
            IsEmployed = true
        },
        new()
        {
            FirstName = "Jane",
            LastName = "Doe",
            Age = 44,
            DateOfBirth = new DateTime(1976, 4, 12)
        },
        new()
        {
            FirstName = "Max",
            LastName = "Power",
            Age = 14,
            DateOfBirth = new DateTime(2006, 3, 3),
            IsEmployed = true
        },
        new()
        {
            FirstName = "Sally",
            LastName = "Snee",
            Age = 33,
            DateOfBirth = new DateTime(1987, 6, 18),
            IsEmployed = true
        },
        new()
        {
            FirstName = "Paul",
            LastName = "Bunyan",
            Age = 100,
            DateOfBirth = new DateTime(1921, 11, 21)
        },
        new()
        {
            FirstName = "John",
            LastName = "Doe",
            Age = 67,
            DateOfBirth = new DateTime(1953, 8, 10)
        },
        new()
        {
            FirstName = "Gerry",
            LastName = "Guggenheim",
            Age = 41,
            DateOfBirth = new DateTime(1979, 3, 5),
            IsEmployed = true
        },
        new()
        {
            FirstName = "Max",
            LastName = "Power",
            Age = 14,
            DateOfBirth = new DateTime(2006, 3, 3)
        },
        new()
        {
            FirstName = "Lucy",
            LastName = "Locket",
            Age = 8,
            DateOfBirth = new DateTime(2012, 5, 24)
        },
        new()
        {
            FirstName = "Jack",
            LastName = "Smith",
            Age = 56,
            DateOfBirth = new DateTime(1974, 1, 1)
        },
        new()
        {
            FirstName = "Max",
            LastName = "Power",
            Age = 14,
            DateOfBirth = new DateTime(2006, 3, 3)
        },
        new()
        {
            FirstName = "Max",
            LastName = "Power",
            Age = 14,
            DateOfBirth = new DateTime(2006, 3, 3)
        },
        new()
        {
            FirstName = "Max",
            LastName = "Power",
            Age = 14,
            DateOfBirth = new DateTime(2006, 3, 3)
        }
    };

    private int _gridWidth = 800;
    private int _gridHeight = 500;
    private int _rowHeight = 40;
    private string _jsonValue;
    private string _message = string.Empty;
    private bool _canEdit = false;
    private bool _canAdd = false;
    private bool _canDelete = false;
    private bool _canResizeColumns = false;

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
